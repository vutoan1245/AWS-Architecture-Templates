AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation Template for Best Practice EMR Cluster Configuration for Spark or S3-backed HBase."

Parameters:
  EMRClusterName:
    Description: "The name assigned to the EMR cluster."
    Type: String
    Default: "emrcluster"

  KeyName:
    Description: "The name of an existing EC2 Key Pair to enable SSH access to the cluster instances."
    Type: String

  MasterInstanceType:
    Description: "Instance type for the EMR cluster's master node."
    Type: String
    Default: "m3.xlarge"

  CoreInstanceType:
    Description: "Instance type for the core nodes within the EMR cluster."
    Type: String
    Default: "m3.xlarge"

  NumberOfCoreInstances:
    Description: "Number of core instances to be provisioned in the EMR cluster."
    Type: Number
    Default: 2

  SubnetID:
    Description: "A valid ID of a public subnet in the selected VPC."
    Type: String
    Default: "subnet-dba430ad"

  LogUri:
    Description: "Amazon S3 bucket URL for storing EMR cluster logs."
    Type: String
    Default: "s3://emrclusterlogbucket/"

  S3DataUri:
    Description: "Amazon S3 bucket URL to be used for storing HBase data."
    Type: String
    Default: "s3://emrclusterdatabucket/"

  ReleaseLabel:
    Description: "The Amazon EMR release version to use for the cluster."
    Type: String
    Default: "emr-5.7.0"

  Applications:
    Description: "Select applications to be installed on the EMR cluster. Choose either Ganglia and Spark or Ganglia and S3-backed HBase."
    Type: String
    AllowedValues:
      - Spark
      - Hbase

Conditions:
  Spark: !Equals
    - !Ref Applications
    - "Spark"

  Hbase: !Equals
    - !Ref Applications
    - "Hbase"

Resources:
  # EMR Cluster resource definition
  EMRCluster:
    Type: "AWS::EMR::Cluster"
    DependsOn:
      - EMRClusterServiceRole
      - EMRClusterinstanceProfileRole
      - EMRClusterinstanceProfile
    Properties:
      Applications:
        - Name: "Ganglia"
        - !If
          - Spark
          - Name: "Spark"
          - !Ref "AWS::NoValue"
        - !If
          - Hbase
          - Name: "Hbase"
          - !Ref "AWS::NoValue"
      Configurations:
        - Classification: "hbase-site"
          ConfigurationProperties:
            hbase.rootdir: !Ref S3DataUri
        - Classification: "hbase"
          ConfigurationProperties:
            hbase.emr.storageMode: "s3"
      Instances:
        Ec2KeyName: !Ref KeyName
        Ec2SubnetId: !Ref SubnetID
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType: !Ref MasterInstanceType
          Market: "ON_DEMAND"
          Name: "Master"
        CoreInstanceGroup:
          InstanceCount: !Ref NumberOfCoreInstances
          InstanceType: !Ref CoreInstanceType
          Market: "ON_DEMAND"
          Name: "Core"
        TerminationProtected: false
      VisibleToAllUsers: true
      JobFlowRole: !Ref EMRClusterinstanceProfile
      ReleaseLabel: !Ref ReleaseLabel
      LogUri: !Ref LogUri
      Name: !Ref EMRClusterName
      AutoScalingRole: "EMR_AutoScaling_DefaultRole"
      ServiceRole: !Ref EMRClusterServiceRole

  # IAM Role for EMR service
  EMRClusterServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "elasticmapreduce.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole"
      Path: "/"

  # IAM Role for EC2 instances in the EMR cluster
  EMRClusterinstanceProfileRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
      Path: "/"

  # Instance profile for EC2 instances in the EMR cluster
  EMRClusterinstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref EMRClusterinstanceProfileRole

Outputs:
  ClusterID:
    Description: "The unique identifier of the created EMR Cluster."
    Value: !Ref EMRCluster

  MasterPublicDNS:
    Description: "The public DNS name of the master node in the EMR Cluster."
    Value: !GetAtt EMRCluster.MasterPublicDNS

  SparkEndpoint:
    Description: "URL of the Spark Web UI if Spark is installed."
    Value: !Sub "http://${EMRCluster.MasterPublicDNS}:8088"
    Condition: Spark

  HbaseMasterURL:
    Description: "URL of the HBase Master UI if HBase is installed."
    Value: !Sub "http://${EMRCluster.MasterPublicDNS}:16010"
    Condition: Hbase
